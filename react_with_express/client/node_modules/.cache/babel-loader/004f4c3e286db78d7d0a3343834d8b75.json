{"ast":null,"code":"var _jsxFileName = \"/Users/codyum/Desktop/Github/tier-creator/tier-creator/react_with_express/src/components/Ranked.js\";\nimport React from \"react\";\nimport Cell from \"./Cell.js\"; // THIS INDEX SYSTEM NEEDS TO BE FIXED. Sometimes, the rank is repeated -- refresh the page multiple times.\n\nlet index = 1;\n\nclass Ranked extends React.Component {\n  constructor(props) {\n    super(props);\n    this.index = 1;\n    this.state = {\n      body: [],\n      link: props.location.pathname,\n      title: \"DEFAULT\",\n      totalCount: 0\n    };\n  } // When mounted, fetch all necessary data such as Items, Title, total Count respectively\n\n\n  componentDidMount() {\n    fetch(this.state.link).then(res => res.json()).then(body => {\n      this.setState({\n        body\n      });\n      index = 1;\n    });\n    fetch(\"/getTitle/\" + this.props.match.params.item).then(res => res.json()).then(body => {\n      this.setState({\n        title: body[0].name\n      });\n      console.log(this.state.title);\n      index = 1;\n    });\n    fetch(\"/search/\" + this.props.match.params.item).then(res => res.json()).then(body => {\n      this.setState({\n        totalCount: body[0].totalCount\n      });\n      console.log(this.state.totalCount);\n    });\n    index = 1;\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Ranked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 40\n      }\n    }, this.state.title)), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"ranked_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, this.state.body.map(item => React.createElement(Cell, [item, index++, item.count / this.state.totalCount])))), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"notice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"The rank will be sorted once you refresh/exit the page\"));\n  }\n\n}\n\nexport default Ranked;","map":{"version":3,"sources":["/Users/codyum/Desktop/Github/tier-creator/tier-creator/react_with_express/src/components/Ranked.js"],"names":["React","Cell","index","Ranked","Component","constructor","props","state","body","link","location","pathname","title","totalCount","componentDidMount","fetch","then","res","json","setState","match","params","item","name","console","log","render","map","createElement","count"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Cell from \"./Cell.js\";\n\n\n// THIS INDEX SYSTEM NEEDS TO BE FIXED. Sometimes, the rank is repeated -- refresh the page multiple times.\nlet index =1;\nclass Ranked extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            body: [],\n            link: (props.location.pathname),\n            title: \"DEFAULT\",\n            totalCount: 0\n        }\n    }\n\n    // When mounted, fetch all necessary data such as Items, Title, total Count respectively\n    componentDidMount() {\n        fetch(this.state.link)\n\n            .then(res => res.json())\n            .then(body => {\n                this.setState({ body })\n                index =1;\n            });\n\n\n        fetch(\"/getTitle/\" + this.props.match.params.item)\n            .then(res => res.json())\n            .then(body => {\n                this.setState({ title: body[0].name});\n                console.log(this.state.title);\n                index =1;\n            });\n\n        fetch(\"/search/\" + this.props.match.params.item)\n            .then(res => res.json())\n            .then(body => {\n                this.setState({ totalCount: body[0].totalCount});\n                console.log(this.state.totalCount);\n            });\n        \n        index =1;\n        console.log(this.props);\n    }\n\n\n\n    render() {\n        return (\n            <div className = \"Ranked\">\n                <div className=\"title\"><a>{this.state.title}</a></div>\n                <table className=\"ranked_table\">\n                    <tbody>\n                        {/* Creates row cell for every item in the body */}\n                        {this.state.body.map(item => React.createElement(Cell, [item, index++,(item.count/this.state.totalCount)]))}\n                    </tbody>\n                </table>\n                <a className=\"notice\">The rank will be sorted once you refresh/exit the page</a>\n            </div>\n        );\n    }\n    index=1;\n}\nexport default Ranked;"]},"metadata":{},"sourceType":"module"}