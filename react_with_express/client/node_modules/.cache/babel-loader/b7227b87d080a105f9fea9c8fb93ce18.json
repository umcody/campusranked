{"ast":null,"code":"var _jsxFileName = \"/Users/codyum/Desktop/Github/tier-creator/tier-creator/react_with_express/src/Cell.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport posed from \"react-pose\"; //import image from \"../public/asset/kobeBryant.jpg\";\n\nconst Vote = posed.div({\n  hidden: {\n    left: \"0px\"\n  },\n  visible: {\n    left: \"-75px\",\n    transition: {\n      width: {\n        ease: \"easeInAndOut\",\n        duration: 200\n      }\n    }\n  }\n});\n\nclass Cell extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false,\n      count: this.props[0].count,\n      clicked: false,\n      clickCount: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    if (this.state.clickCount === 0) {\n      this.setState({\n        isVisible: !this.state.isVisible,\n        clickCount: 1\n      });\n    } else if (this.state.clickCount === 1) {\n      this.setState({\n        isVisible1: !this.state.isVisible,\n        clickCount: 2\n      });\n    } else {\n      this.setState({\n        isVisible: false,\n        isVisible: false,\n        clickCount: 0\n      });\n    }\n  }\n\n  componentDidMount() {\n    const current = ReactDOM.findDOMNode(this);\n    let button = current.querySelector(\".upVote\");\n    let player = this.props[0].name;\n    console.log(player);\n    button.addEventListener(\"click\", e => {\n      if (this.state.clicked === false) {\n        console.log(\"SENDING POST TO \" + player);\n        fetch(\"/nba/upvote/\" + player, {\n          method: \"post\",\n          body: {\n            \"name\": player\n          }\n        });\n        this.setState({\n          count: this.state.count + 1,\n          clicked: true\n        });\n      } else {\n        console.log(\"SENDING POST TO \" + player);\n        fetch(\"/nba/downvote/\" + player, {\n          method: \"post\",\n          body: {\n            \"name\": player\n          }\n        });\n        this.setState({\n          count: this.state.count - 1,\n          clicked: false\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      isVisible\n    } = this.state;\n    const {\n      isVisible1\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"voteContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Vote, {\n      className: \"vote1\",\n      pose: isVisible ? \"visible\" : \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Vote, {\n      className: \"vote2\",\n      pose: isVisible1 ? \"visible\" : \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Vote, {\n      className: \"vote3\",\n      pose: isVisible ? \"visible\" : \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, this.props[1]), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image_border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props[0].image,\n      className: \"profile_pic\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"medal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, this.props[0].name)), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"upVote\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/asset/vote_btn.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, this.state.count));\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/Users/codyum/Desktop/Github/tier-creator/tier-creator/react_with_express/src/Cell.js"],"names":["React","ReactDOM","posed","Vote","div","hidden","left","visible","transition","width","ease","duration","Cell","Component","constructor","props","state","isVisible","count","clicked","clickCount","handleClick","bind","event","setState","isVisible1","componentDidMount","current","findDOMNode","button","querySelector","player","name","console","log","addEventListener","e","fetch","method","body","render","image"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport posed from \"react-pose\";\n//import image from \"../public/asset/kobeBryant.jpg\";\n\nconst Vote = posed.div({\n    hidden: { left: \"0px\" },\n    visible: {\n        left: \"-75px\",\n        transition: {\n            width: { ease: \"easeInAndOut\", duration: 200 }\n        }\n    }\n});\n\nclass Cell extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            count: this.props[0].count,\n            clicked: false,\n            clickCount:0,\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(event) {\n        \n        if(this.state.clickCount === 0){\n            this.setState({\n                isVisible: !this.state.isVisible,\n                clickCount: 1\n            });\n        }else if(this.state.clickCount === 1){\n            this.setState({\n                isVisible1: !this.state.isVisible,\n                clickCount: 2\n            });\n        }else{\n            this.setState({\n                isVisible: false,\n                isVisible: false,\n                clickCount: 0\n            });\n        }\n        \n    }\n\n    componentDidMount() {\n        const current = ReactDOM.findDOMNode(this);\n        let button = current.querySelector(\".upVote\");\n        let player = this.props[0].name;\n        console.log(player);\n        button.addEventListener(\"click\", (e) => {\n            if (this.state.clicked === false) {\n                console.log(\"SENDING POST TO \"+ player)\n                fetch(\"/nba/upvote/\" + player, {\n                    method: \"post\",\n                    body: {\n                        \"name\": player\n                    }\n                });\n                this.setState({ count: this.state.count + 1, clicked: true });\n            }else{\n                console.log(\"SENDING POST TO \"+ player)\n                fetch(\"/nba/downvote/\" + player, {\n                    method: \"post\",\n                    body: {\n                        \"name\": player\n                    }\n                });\n                this.setState({ count: this.state.count -1, clicked: false});\n            }\n        })\n    }\n\n\n    render() {\n        const { isVisible } = this.state;\n        const { isVisible1 } = this.state;\n        return (\n\n            <tr className=\"row\">\n                <th className=\"voteContainer\">\n                    <Vote className=\"vote1\" pose={isVisible ? \"visible\" : \"hidden\"}></Vote>\n                    <Vote className=\"vote2\" pose={isVisible1 ? \"visible\" : \"hidden\"}></Vote>\n                    <Vote className=\"vote3\" pose={isVisible ? \"visible\" : \"hidden\"}></Vote>\n                </th>\n                <th>{this.props[1]}</th>\n                <th>\n                    <div className=\"image_border\">\n                        <img src={this.props[0].image} className=\"profile_pic\" alt=\"\" >\n                        </img>\n                        <div className=\"medal\"></div>\n                    </div></th>\n                <th><div className=\"name\">{this.props[0].name}</div></th>\n                <th>\n                    <a className=\"upVote\" onClick={this.handleClick}>\n                        <img src=\"/asset/vote_btn.svg\"></img>\n                    </a>\n                </th>\n                <th className=\"count\">{this.state.count}</th>\n            </tr>\n        );\n    }\n}\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}