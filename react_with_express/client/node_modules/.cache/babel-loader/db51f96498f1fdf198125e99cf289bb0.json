{"ast":null,"code":"var _jsxFileName = \"/Users/codyum/Desktop/Github/tier-creator/tier-creator/react_with_express/src/components/Cell.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport posed from \"react-pose\"; //import image from \"../public/asset/kobeBryant.jpg\";\n// VOTE ANIMATION USING POSE JS\n\nconst Vote = posed.div({\n  hidden: {\n    left: \"0px\"\n  },\n  visible: {\n    left: \"-75px\",\n    transition: {\n      width: {\n        ease: \"easeInAndOut\",\n        duration: 200\n      }\n    }\n  }\n});\n\nclass Cell extends React.Component {\n  // CONSTRUCTOR and Initializes the STATE.\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false,\n      isVisible1: false,\n      count: props[0].count,\n      clicked: false,\n      clickCount: 0\n    };\n    this.controlVote = this.controlVote.bind(this);\n  } // vote CLICKED HANDLER to Toggle animation \n\n\n  controlVote(count) {\n    if (count === 1) {\n      this.setState({\n        isVisible: true\n      });\n    } else if (count === 2) {\n      this.setState({\n        isVisible1: true\n      });\n    }\n  } // POSTS to Server that the item is voted\n\n\n  componentDidMount() {\n    const current = ReactDOM.findDOMNode(this);\n    let button = current.querySelector(\".upVote\");\n    let {\n      name\n    } = this.props[0];\n    let url = this.props[0].category;\n    const JWToken = localStorage.getItem(\"JWT\"); // Updates the count value of the players. Upvote and Downvote(implicit). \n\n    button.addEventListener(\"click\", e => {\n      console.log(url + \"/upvote/\" + name);\n\n      if (this.state.clicked === false) {\n        fetch(url + \"/upvote/\" + name, {\n          headers: {\n            Authorization: `JWT ${JWToken}`\n          }\n        }).then(res => res.json()).then(res => this.controlVote(res.count));\n        this.setState({\n          count: this.state.count + 1,\n          clicked: false\n        });\n      } else {\n        fetch(\"ranked/nba/downvote/\" + name, {\n          method: \"post\",\n          body: {\n            \"name\": name\n          }\n        });\n        this.setState({\n          count: this.state.count - 1,\n          clicked: false\n        });\n      }\n    });\n  } //RENDER the Row\n\n\n  render() {\n    const {\n      isVisible\n    } = this.state;\n    const {\n      isVisible1\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"voteContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Vote, {\n      className: \"vote1\",\n      pose: isVisible ? \"visible\" : \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Vote, {\n      className: \"vote2\",\n      pose: isVisible1 ? \"visible\" : \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Vote, {\n      className: \"vote3\",\n      pose: isVisible ? \"visible\" : \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, this.props[1]), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image_border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props[0].image,\n      className: \"profile_pic\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"medal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, this.props[0].name)), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upVote\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/asset/vote_btn.svg\",\n      className: \"voteSVG\",\n      alt: \"vote button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, this.state.count), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"testContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test\",\n      style: {\n        width: this.props[2] * document.body.clientWidth / 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/Users/codyum/Desktop/Github/tier-creator/tier-creator/react_with_express/src/components/Cell.js"],"names":["React","ReactDOM","posed","Vote","div","hidden","left","visible","transition","width","ease","duration","Cell","Component","constructor","props","state","isVisible","isVisible1","count","clicked","clickCount","controlVote","bind","setState","componentDidMount","current","findDOMNode","button","querySelector","name","url","category","JWToken","localStorage","getItem","addEventListener","e","console","log","fetch","headers","Authorization","then","res","json","method","body","render","image","handleClick","document","clientWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport posed from \"react-pose\";\n//import image from \"../public/asset/kobeBryant.jpg\";\n\n\n// VOTE ANIMATION USING POSE JS\nconst Vote = posed.div({\n    hidden: { left: \"0px\" },\n    visible: {\n        left: \"-75px\",\n        transition: {\n            width: { ease: \"easeInAndOut\", duration: 200 }\n        }\n    }\n});\n\nclass Cell extends React.Component {\n\n    // CONSTRUCTOR and Initializes the STATE.\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            isVisible1: false,\n            count: props[0].count,\n            clicked: false,\n            clickCount:0,\n        }\n        this.controlVote = this.controlVote.bind(this);\n    }\n\n    // vote CLICKED HANDLER to Toggle animation \n    controlVote(count) {\n        \n        if(count === 1){\n            this.setState({\n                isVisible: true\n            });\n        }else if(count === 2){\n            this.setState({\n                isVisible1:true\n            });\n        }\n    }\n\n    // POSTS to Server that the item is voted\n    componentDidMount() {\n        const current = ReactDOM.findDOMNode(this);\n        let button = current.querySelector(\".upVote\");\n        let {name} = this.props[0];\n        let url = this.props[0].category;\n        const JWToken = localStorage.getItem(\"JWT\");\n\n        // Updates the count value of the players. Upvote and Downvote(implicit). \n        button.addEventListener(\"click\", (e) => {\n            \n            console.log(url+\"/upvote/\"+name);\n\n            if (this.state.clicked === false) {\n\n                fetch(url+\"/upvote/\"+name, {\n                    headers: { Authorization: `JWT ${JWToken}` }\n                })\n                .then(res=>res.json())\n                .then(res=>this.controlVote(res.count));\n                \n\n                this.setState({ count: this.state.count + 1, clicked: false });\n\n            }else{\n                fetch(\"ranked/nba/downvote/\" + name, {\n                    method: \"post\",\n                    body: {\n                        \"name\": name\n                    }\n                });\n                this.setState({ count: this.state.count -1, clicked: false});\n            }\n        });\n        \n    }\n\n    //RENDER the Row\n    render() {\n        const { isVisible } = this.state;\n        const { isVisible1 } = this.state;\n        return (\n\n            <tr className=\"row\">\n                <th className=\"voteContainer\">\n                    {/* DIV cannot exist inside TR so the vote indicator is in TH with pos. abs*/}\n                    <Vote className=\"vote1\" pose={isVisible ? \"visible\" : \"hidden\"}></Vote>\n                    <Vote className=\"vote2\" pose={isVisible1 ? \"visible\" : \"hidden\"}></Vote>\n                    <Vote className=\"vote3\" pose={isVisible ? \"visible\" : \"hidden\"}></Vote>\n                </th>\n                <th>{this.props[1]}</th>\n                <th>\n                    {/* PROFILE PICTURE*/}\n                    <div className=\"image_border\">\n                        <img src={this.props[0].image} className=\"profile_pic\" alt=\"\" >\n                        </img>\n                        <div className=\"medal\"></div>\n                    </div></th>\n                <th><div className=\"name\">{this.props[0].name}</div></th>\n                <th>\n                    {/* VOTE LOGO/ BUTTON */}\n                    <div className=\"upVote\" onClick={this.handleClick}>\n                        <img src=\"/asset/vote_btn.svg\" className = \"voteSVG\" alt = \"vote button\"></img>\n                    </div>\n                </th>\n                <th className=\"count\">{this.state.count}</th>\n                <th className = \"testContainer\">\n                    {/* *** UNDER DEVELOPMENT VOTE PERCENTAGE BAR */}\n                    <div className = \"test\" style = {{width:(this.props[2]*document.body.clientWidth/2)}}></div>\n                </th>\n            </tr>\n        );\n    }\n}\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}